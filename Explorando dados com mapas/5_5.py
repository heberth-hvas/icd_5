# -*- coding: utf-8 -*-
"""5.5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oDSLYjQdqxpmT5OiBJrVrqvTXoKiAniO
"""

import pandas as pd
#!pip install -U pandasql
import pandasql
import seaborn as sns
import matplotlib.pyplot as plt

dataf = pd.read_csv('nuforc.csv')

del dataf['Unnamed: 0'] #Eliminando a coluna desnecess√°ria

lista_usa = ['AK','AL','AR','AZ','CA','CO','CT','DE','FL','GA',
             'HI','IA','ID','IL','IN','KS','KY','LA','MA','MD',
             'ME','MI','MN','MO','MS','MT','NC','ND','NE','NH',
             'NJ','NM','NV','NY','OH','OK','OR','PA','RI','SC',
             'SD','TN','TX','UT','VA','VT','WA','WI','WV','WY']

lista = pd.DataFrame(lista_usa, columns=['Estados_EUA'])

sql_usa = """
  SELECT dataf.* FROM dataf, lista
  WHERE State = Estados_EUA
"""

separados_usa = pandasql.sqldf(sql_usa, locals())

mioresE = """
    SELECT State, COUNT(State) as cState FROM separados_usa
    WHERE State != ' ' AND LOWER(State) != 'none'
    GROUP BY State ORDER BY cState desc;
  """
sql1 = pandasql.sqldf(mioresE)

quatroE = """
    SELECT LOWER(Shape) as Shape, COUNT(Shape) as Views FROM separados_usa
    WHERE Shape != ' ' AND LOWER(Shape) != 'unknown'
    GROUP BY LOWER(Shape) ORDER BY Views desc;
  """
sql2 = pandasql.sqldf(quatroE)

reunindo = """
    SELECT COUNT(LOWER(Shape)) as Views, LOWER(Shape) as Shape, State FROM separados_usa
    WHERE LOWER(Shape) IN ('light', 'circle', 'triangle', 'fireball') AND State IN ('CA', 'FL', 'WA', 'TX')
    GROUP BY LOWER(Shape), State ORDER BY State, Views desc;
  """
sql3 = pandasql.sqldf(reunindo)

colors =['#253031', '#315659', '#2978A0', '#C6E0FF']
sns.catplot(x="State", y="Views", hue="Shape", data=sql3, kind="bar", legend_out=False, palette=colors, aspect=1.4)

sql3.pivot("State", "Shape", "Views").plot(kind = "bar", stacked = True,  color = ['#253031', '#315659', '#2978A0', '#C6E0FF'])

from ipywidgets.embed import embed_minimal_html
import gmaps
#!pip install gmaps
#!pip install zipcodes
import zipcodes

mapp = pd.DataFrame(zipcodes.filter_by(country='US')).dropna()

comparar = """
    SELECT mapp.lat, mapp.long, COUNT(separados_usa.Posted) as Relatos FROM mapp, separados_usa
    WHERE mapp.state = separados_usa.State
    GROUP BY mapp.city;
  """
sql4 = pandasql.sqldf(comparar)

gmaps.configure(api_key='AIzaSyCuECVMLeJG3JQgLrYOlsBRRgStD-wrktY')
locations = sql4[['lat', 'long']]
relats = sql4['Relatos']
fig = gmaps.figure()
fig.add_layer(gmaps.heatmap_layer(locations, weights=relats))

embed_minimal_html('mapa_usa.html', views=[fig])