# -*- coding: utf-8 -*-
"""5.7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Cx1w082j0ZTx5rprR7UIb8zTb5m-Ue8z

##Importando o Pandas e lendo o arquivo csv
"""

import pandas as pd
#!pip install -U pandasql
import pandasql

dataf = pd.read_csv('nuforc.csv')

del dataf['Unnamed: 0'] #Eliminando a coluna desnecessÃ¡ria

"""##Removendo os campos vazios de City, Shape e State"""

sep_geral = """
    SELECT * FROM dataf
    WHERE State != ' ' AND LOWER(State) != 'none' AND LOWER(State) != 'unknown'
    AND LOWER(Shape) != 'unknown' AND LOWER(Shape) != ' ' AND LOWER(Shape) != 'none'
    AND LOWER(City) != ' ' AND LOWER(City) != 'none' AND LOWER(City) != 'unknown';
  """
sql1 = pandasql.sqldf(sep_geral)

"""##Deixando apenas o dados dos Estatodos Unidos"""

usa = pd.read_csv('estados_usa.csv')

est_usa = '''
  SELECT sql1.* FROM sql1, usa
  WHERE sql1.State = usa.Abbreviation
'''
sql2 = pandasql.sqldf(est_usa)

"""##Removendo as colunas Duration, Summary e Posted"""

columns = ['Duration', 'Summary', 'Posted']
sql2.drop(columns, inplace=True, axis=1)

"""##Calculando os Shapes e mostrando os que possuem mais de 1000 registros"""

sh_pop = '''
  SELECT Shape, COUNT(Shape) as Aparicoes FROM sql2
  GROUP BY Shape HAVING Aparicoes > 1000;
'''
shapes_populares = pandasql.sqldf(sh_pop)
# shapes_populares.info()

"""##Juntando todos os dados e salvando em um arquivo csv"""

# Salvar o dataframe final em um arquivo CSV com o nome "df_OVNI_limpo".
final = '''
  SELECT sql2.* FROM sql2, shapes_populares
  WHERE sql2.Shape = shapes_populares.Shape
'''
dataf_final = pandasql.sqldf(final)

dataf_final.to_csv('df_OVNI_limpo.csv')