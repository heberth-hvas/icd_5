# -*- coding: utf-8 -*-
"""5.10.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10Y1aNXC3MiVoUHQV8b9kMFaOvvGrh0U_
"""

#!pip install pymongo
#!pip install dnspython
import pymongo
import pandas as pd
import json

client = pymongo.MongoClient("mongodb+srv://hvas_:SENHA_OCULTADA@datascience-kyxwo.gcp.mongodb.net/test?retryWrites=true&w=majority")

db = client.ovni

collection = db.ovnis

dataf = pd.read_csv('df_OVNI_preparado.csv')

transf_json = dataf.to_json(orient='records')

load_json = json.loads(transf_json)

"""###Contar e mostrar quantos documentos há na coleção ovnis"""

#insert_bd = collection.insert_many(load_json)
list_all = list(collection.find({}))
list_all

count_json = collection.count()
count_json

"""###Resgatar todos os documentos (registros) da coleção ovnis e ordenar por tipo (shape)"""

doc_all_shape = list(collection.find( { '$query': {}, '$orderby': {'Shape': 1} } ))

"""###Verificar quantas ocorrências existem por estado"""

occurrence_state = list(collection.aggregate([{ '$group': {'Views': { '$sum': 1}, '_id' : '$State' } }, { '$sort': { 'Views': -1 } }]))
occurrence_state

"""###Buscar todas as ocorrências da cidade Phoenix."""

occurrence_phoenix = list(collection.find({'City' : 'Phoenix'}))
occurrence_phoenix

"""###Buscar as ocorrências do estado da Califórnia e ocultar o id de cada documento (registro)."""

occurrence_california = list(collection.find({'State' : 'CA'}, {'_id' : 0}))
occurrence_california